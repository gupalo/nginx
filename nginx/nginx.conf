user www-data;
worker_processes 4;
pid /run/nginx.pid;
events { worker_connections 1024; }
http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format realip '$http_x_real_ip - $remote_user [$time_local]  "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" rt=$request_time urt="$upstream_response_time"';
    access_log /var/log/nginx/access.log realip;
    error_log /var/log/nginx/error.log;
    gzip on;
    gzip_disable "msie6";

    #replace1

    ###SSL server { listen 80 default_server; server_name {APP_DOMAIN}; return 301 https://$host$request_uri; }
    server {
        server_name {APP_DOMAIN};

        listen 80; #default
        ###SSL listen 443 ssl http2; ssl_certificate /etc/nginx/ssl/fullchain.pem; ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        root {APP_WORKDIR};

        client_max_body_size 0;
        chunked_transfer_encoding on;

        location / {
            try_files $uri @rewriteapp;
        }

        location @rewriteapp {
            rewrite ^(.*)$ /{PHP_APP_FILE}/$1 last;
        }

        location ~ ^/{PHP_APP_FILE_REGEX}(/|$) {
            fastcgi_pass {PHP_HOST}:{PHP_PORT};
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            send_timeout {SEND_TIMEOUT};
            fastcgi_index {PHP_APP_FILE};
            fastcgi_read_timeout {PHP_TIMEOUT};
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param REMOTE_ADDR ${REMOTE_ADDR_PARAM};
            fastcgi_param HTTPS {HTTPS};
        }

        location ~ \.{FORBIDDEN_EXTENSION}(/|$) {
            # don't show or execute php files except one above
            return 403;
        }

        location = /favicon.ico {
            try_files $uri @rewriteapp;
            access_log off;
            log_not_found off;
        }
        location = /robots.txt {
            try_files $uri @rewriteapp;
            access_log off;
            log_not_found off;
        }
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        ###LOCATIONS include ${DIR}/locations.conf;

        #replace2
    }
}
#replace3
